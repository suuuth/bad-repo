{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { isProxy, toRaw } from 'vue';\nimport router from '@/router';\nconst state = {\n  user: null,\n  access_token: null\n};\nconst getters = {\n  isAuthenticated: state => {\n    console.error('isAuthenticated state: ', isProxy(state) ? toRaw(state) : state);\n    return !!state.user;\n  },\n  StateUser: state => state.user,\n  getToken: state => state.access_token\n};\nconst actions = {\n  async Register({\n    dispatch\n  }, form) {\n    await axios.post('/api/register', form);\n    let UserForm = new FormData();\n    UserForm.append('username', form.username);\n    UserForm.append('password', form.password);\n    await dispatch('LogIn', UserForm);\n  },\n  async LogIn({\n    commit\n  }, user) {\n    user = isProxy(user) ? toRaw(user) : user;\n    axios.post('/api/login', user).then(response => {\n      console.log(response);\n      commit('setUser', response.data.user);\n      commit('setToken', response.data.access_token);\n      router.push('/profile');\n    }).catch(err => console.error(err));\n  },\n  async CreateMessage({\n    dispatch\n  }, post) {\n    await axios.post('post', post);\n    await dispatch('GetMessages');\n  },\n  async GetMessages({\n    commit\n  }) {\n    let response = await axios.get('messages');\n    commit('setPosts', response.data);\n  },\n  async LogOut({\n    commit\n  }) {\n    commit('logOut');\n  }\n};\nconst mutations = {\n  setUser(state, username) {\n    state.user = username;\n  },\n  setToken(state, token) {\n    state.access_token = token;\n  },\n  logOut(state) {\n    state.user = null;\n    state.access_token = null;\n  }\n};\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","isProxy","toRaw","router","state","user","access_token","getters","isAuthenticated","console","error","StateUser","getToken","actions","Register","dispatch","form","post","UserForm","FormData","append","username","password","LogIn","commit","then","response","log","data","push","catch","err","CreateMessage","GetMessages","get","LogOut","mutations","setUser","setToken","token","logOut"],"sources":["/home/kevin/Projects/Personal/big-bad-project/client/src/store/modules/auth.js"],"sourcesContent":["import axios from 'axios'\r\nimport { isProxy, toRaw } from 'vue'\r\nimport router from '@/router'\r\n\r\nconst state = {\r\n  user: null,\r\n  access_token: null\r\n};\r\n\r\nconst getters = {\r\n  isAuthenticated: state => { console.error('isAuthenticated state: ', isProxy(state) ? toRaw(state) : state); return !!state.user } ,\r\n  StateUser: state => state.user,\r\n  getToken: state => state.access_token,\r\n};\r\n\r\nconst actions = {\r\n  async Register({dispatch}, form) {\r\n    await axios.post('/api/register', form)\r\n    let UserForm = new FormData()\r\n    UserForm.append('username', form.username)\r\n    UserForm.append('password', form.password)\r\n    await dispatch('LogIn', UserForm)\r\n  },\r\n\r\n  async LogIn({ commit }, user) {\r\n    user = isProxy(user) ? toRaw(user) : user\r\n    axios.post('/api/login', user).then(response => {\r\n      console.log(response)\r\n      commit('setUser', response.data.user)\r\n      commit('setToken', response.data.access_token)\r\n      router.push('/profile')\r\n    }).catch(err => console.error(err))\r\n  },\r\n\r\n  async CreateMessage({ dispatch }, post) {\r\n    await axios.post('post', post)\r\n    await dispatch('GetMessages')\r\n  },\r\n\r\n  async GetMessages({ commit }){\r\n    let response = await axios.get('messages')\r\n    commit('setPosts', response.data)\r\n  },\r\n\r\n  async LogOut({ commit }){\r\n    commit('logOut')\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  setUser(state, username){\r\n    state.user = username\r\n  },\r\n  setToken(state, token) {\r\n    state.access_token = token\r\n  },\r\n  logOut(state) {\r\n    state.user = null\r\n    state.access_token = null\r\n  }\r\n};\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}